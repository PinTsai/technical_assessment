// Mocks generated by Mockito 5.4.4 from annotations
// in technical_assessment/test/widget/post_list_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i7;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:technical_assessment/data/post_model.dart' as _i4;
import 'package:technical_assessment/providers/post_provider.dart' as _i3;
import 'package:technical_assessment/services/postApi.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePostApi_0 extends _i1.SmartFake implements _i2.PostApi {
  _FakePostApi_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PostProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostProvider extends _i1.Mock implements _i3.PostProvider {
  MockPostProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PostApi get postApi => (super.noSuchMethod(
        Invocation.getter(#postApi),
        returnValue: _FakePostApi_0(
          this,
          Invocation.getter(#postApi),
        ),
      ) as _i2.PostApi);

  @override
  _i3.PostState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i3.PostState.initial,
      ) as _i3.PostState);

  @override
  List<_i4.Post> get posts => (super.noSuchMethod(
        Invocation.getter(#posts),
        returnValue: <_i4.Post>[],
      ) as List<_i4.Post>);

  @override
  String get errorMessage => (super.noSuchMethod(
        Invocation.getter(#errorMessage),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
      ) as String);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i6.Future<void> loadPosts() => (super.noSuchMethod(
        Invocation.method(
          #loadPosts,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void addListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
